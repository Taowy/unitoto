<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.avenger.declare.sys.dao.mapper.MultiphotoMapper" >
  <resultMap id="BaseResultMap" type="com.avenger.declare.api.sys.entity.Multiphoto" >
    <id column="multiphoto_id" property="multiphotoId" jdbcType="VARCHAR" />
    <result column="multiphoto_user_id" property="multiphotoUserId" jdbcType="VARCHAR" />
    <result column="multiphoto_photo_id" property="multiphotoPhotoId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    multiphoto_id, multiphoto_user_id, multiphoto_photo_id
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from multiphoto
    where multiphoto_id = #{multiphotoId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.avenger.declare.api.sys.entity.Multiphoto" >
    insert into multiphoto (multiphoto_id, multiphoto_user_id, multiphoto_photo_id
      )
    values (#{multiphotoId,jdbcType=VARCHAR}, #{multiphotoUserId,jdbcType=VARCHAR}, #{multiphotoPhotoId,jdbcType=VARCHAR}
      )
  </insert>
  <select id="getMultiphotoByPhotoId" parameterType="java.lang.String" resultType="java.lang.String">
    select multiphoto_photo_id
    from multiphoto
    where multiphoto_id = #{photoId,jdbcType=VARCHAR}
  </select>
  <update id="updateMultiphoto" parameterType="com.avenger.declare.api.sys.entity.Multiphoto">
    update photo
    <set>
    multiphoto_user_id = #{multiphotoUserId,jdbcType=VARCHAR},
    multiphoto_photo_id = #{multiphotoPhotoId,jdbcType=VARCHAR}
    </set>
    where multiphoto_id = #{multiphotoId,jdbcType=VARCHAR}
  </update>
</mapper>